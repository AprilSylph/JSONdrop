/**
 * @copyright https://github.com/AprilSylph/JSONdrop
 * @license GPL-3.0
 */
const isUrl=e=>{try{return new URL(e)instanceof URL}catch{return!1}},renderEntry=([e,t],n)=>{const a=document.createElement("p");if("string"==typeof e){const t=Object.assign(document.createElement("span"),{textContent:JSON.stringify(e)});t.dataset.jsondropType="string",a.append(t,": ")}switch(typeof t){case"function":{const e=Object.assign(document.createElement("span"),{textContent:t.toString()});e.dataset.jsondropType="function",a.append(e);break}case"object":{if(null===t){const e=Object.assign(document.createElement("span"),{textContent:JSON.stringify(t)});e.dataset.jsondropType="null",a.append(e);break}const e=Object.assign(document.createElement("details"),{open:n});e.dataset.jsondropType=Array.isArray(t)?"array":"object";const r=Object.assign(document.createElement("summary"));return r.append(...a.childNodes),e.append(r),e}default:{const e=Object.assign(document.createElement("span"),{textContent:JSON.stringify(t)});if(e.dataset.jsondropType=typeof t,a.append(e),isUrl(t)){const n=Object.assign(document.createElement("a"),{href:t,target:"_blank"});n.append(...e.childNodes),e.append(n)}}}return a};export default(e,t={})=>{"object"==typeof e&&null!==e&&(e=Array.isArray(e)?[...e]:{...e}),JSON.stringify(e);const{autoOpenDepth:n=0}=t,a=Object.assign(document.createElement("code"),{className:"jsondrop"}),r=renderEntry([null,e],n>0);if(a.append(r),e!==Object(e))return a;let s=new Map([[r,e]]),o=1;for(;s.size>0;){const e=o<n,t=new Map;for(const[n,a]of s)Object.entries(a).forEach((([r,s])=>{const o=renderEntry([Array.isArray(a)?null:r,s],e);n.append(o),o instanceof HTMLDetailsElement&&t.set(o,s)}));s=t,o++}return a};
